//
//  MainMapInteractor.swift
//
//  Created by Tarsha De Souza on 08/07/2020.
//  Copyright (c) 2020 TarshaDeSouza. All rights reserved.
//
//  This file was generated by the Globile Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainMapInteractorProtocol: MainMapBusinessLogicProtocol, MainMapDataStoreProtocol {
}

protocol MainMapBusinessLogicProtocol {
  func getMapData()
}

protocol MainMapDataStoreProtocol {
  //var name: String { get set }
}

class MainMapInteractor: MainMapInteractorProtocol {
    var presenter: MainMapPresenterProtocol
	var repository: MainMapRepositoryProtocol?
  
    init(presenter: MainMapPresenterProtocol, repository: MainMapRepositoryProtocol = MainMapRepository()) {
        self.presenter = presenter
		self.repository = repository
    }

    func getMapData() {
        let response = MainMap.Model.Response()
        presenter.getMapData(response: response)
		
		repository?.retrieveData(completion: { (meepResult) in
			switch meepResult {
			case .success(let meepObject):
				print("success")
				let t = meepObject
				t.forEach { (me) in
					let m = me
					me.vehicle
					print("MA VEHICLES", me.vehicle)
				}
			case .failure(let error):
				print(error)
			}
		})
		
    }
}
