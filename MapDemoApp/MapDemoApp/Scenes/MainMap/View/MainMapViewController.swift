//
//  MainMapViewController.swift
//
//  Created by Tarsha De Souza on 08/07/2020.
//  Copyright (c) 2020 TarshaDeSouza. All rights reserved.
//
//  This file was generated by the Globile Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import GoogleMaps

protocol MainMapViewProtocol: class {
	func displayMapData(viewModel: MainMap.Model.ViewModel)
	func showError()
}

class MainMapViewController: UIViewController, AttentionView {
	
	var router: MainMapRouterProtocol?
	private var interactor: MainMapInteractorProtocol?
	
	@IBOutlet weak var mapView: GMSMapView! {
		didSet {
			mapView.camera = initialCameraPosition
		}
	}
	
	@IBOutlet weak var zoomInButton: UIButton!
	@IBOutlet weak var zoomOutButton: UIButton!
	
	var zoomLevel: Float = 15.0
	private let initialCameraPosition = GMSCameraPosition.camera(withLatitude: 38.711046, longitude: -9.160096, zoom: 15.0)
	
	override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
		super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
		initScene()
	}
	
	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		initScene()
	}
	
	override func viewDidLoad(){
		super.viewDidLoad()
		configNavBar()
		getMapData()
		configMap()
	}
	
	private func initScene() {
		let presenter = MainMapPresenter(view: self)
		interactor = MainMapInteractor(presenter: presenter)
		router = MainMapRouter(view: self, dataStore: interactor)
	}
	
	private func configMap() {
		let marker = GMSMarker()
		marker.position = CLLocationCoordinate2D(latitude:  38.711046, longitude: -9.160096)
		marker.title = "Lisboa"
		marker.snippet = "Portugal"
		marker.map = mapView
	}
	
	private func configNavBar() {
		self.navigationItem.title = "Meep Map"
	}
	
	private func plotMarkers(with data: MeepViewObject) {
		/// Creates a marker for each type of object
		
		///Vehicle objects
		data.vehicles.forEach { vehicle in
			let marker = MapMarkerFactory.getMapMarker(marker: Marker(title: vehicle.name, position: CLLocationCoordinate2D(latitude: vehicle.y, longitude: vehicle.x), snippet: "\(vehicle.resourceType ?? .electricCar)", type: .vehicle, resType: vehicle.resourceType, companyZoneId: vehicle.companyZoneId))
			marker.map = mapView
		}
		
		///Bike objects
		data.bikes.forEach { bike in
			let marker = MapMarkerFactory.getMapMarker(marker: Marker(title: bike.name, position: CLLocationCoordinate2D(latitude: bike.y, longitude: bike.x), snippet: "\(bike.bikesAvailable?.cleanValue ?? "0") available bikes", type: .bike, companyZoneId: bike.companyZoneId))
			marker.map = mapView
		}
		
		///Bus stops
		data.stops.forEach { busStop in
			let marker = MapMarkerFactory.getMapMarker(marker: Marker(title: busStop.name, position:  CLLocationCoordinate2D(latitude: busStop.y, longitude: busStop.x), snippet: "\(busStop.scheduledArrival ?? 0)", type: .busStop, companyZoneId: busStop.companyZoneId))
			marker.map = mapView
		}
	}
	
	@IBAction func zoomInPressed(_ sender: UIButton) {
		zoomLevel += 1
		mapView.animate(toZoom: zoomLevel)
	}
	
	@IBAction func zoomOutPressed(_ sender: UIButton) {
		zoomLevel -= 1
		mapView.animate(toZoom: zoomLevel)
	}
	
	func showError() {
		presentErrorAlert(message: "We couldnt find any meeps ðŸ˜¬") { (_, _) in
			self.getMapData()
		}
	}
}

//Interaction
extension MainMapViewController {
	private func getMapData() {
		interactor?.getMapData()
	}
}

//Presentation
extension MainMapViewController: MainMapViewProtocol {
	func displayMapData(viewModel: MainMap.Model.ViewModel) {
		plotMarkers(with: viewModel.meeps)
	}
}
